#summary This section describes how to compile Electromag under Linux
#labels Phase-Deploy

= Introduction =

In order to compile ElectroMag you will need either GCC with C++ support (G++), or the Intel C++ compiler. In most cases, descending into the root directory of ElectroMag and typing make in a shell should work.


= Details =

ElectroMag does not explicitly depend on any proprietary blob. Therefore, you may still compile ElectroMag even if you do not have the proprietary NVIDIA drivers and/or the CUDA toolkit installed.

==Prerequisites==
  # GCC or Intel C++ compiler
  # GNU make

In the event you do not have the CUDA toolkit installed, the compilation will complete successfully, but GPU executable code will not be created. In that case, you may obtain the GPU modules from the downloads page. Make sure you get the version with the correct bitness for your build. Due to the design of CUDA, 32-bit modules are not interoperable with 64-bit builds of Electromag and vice-versa.Once you obtain the correct modles, simply copy them in the same folder with the ElectroMag executable.

===Using Graphics Support===

ElectroMag supports displaying the results graphically. However, this requires freeglut, GLEW, GLU libraries to be available. As of revision 32, all graphics code has been moved into a separate module, which is dynamically loaded. ElectroMag may run without the graphics module, and it will still use OpenCL or CUDA acceleration if available.

To compile the graphics module, you will need the following developmental libraries:
  # freeglut 2.6.0 or later (earlier versions will NOT work)
  # GLEW (preferably 1.5.2 or later, but earlier versions may work)
  # GLU

After compiling the Graphics module, you will need to create a symbolic link to "libEMagGraphics.so" (found in ./common/lib after compilation) in /usr/lib for the Graphics module to be loaded by ElectroMag. This is a limitation of how Linux handles dynamic linking, not a limitation of Electromag

= Using the Intel C++ compiler =

The Intel C++ compiler is no longer needed to attain optimal performance. You will most likely get the same performance with GCC.

You will first need to edit Config.mk:
  * uncomment the following line: "include ../Makefile-Intel.mk"
  * comment out the following line "include ../Makefile-GNU.mk"

Then you will need to edit Makefile-Intel.mk, and make sure that ICL_PATH points to the correct location of the compiler's executable files.

Descend into the root of ElectroMag and type make at a shell.